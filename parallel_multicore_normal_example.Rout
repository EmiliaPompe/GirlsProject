
R version 3.3.1 (2016-06-21) -- "Bug in Your Hair"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(devtools)
> devtools::load_all("ConsensusMCMC")
Loading ConsensusMCMC
Loading required package: ggplot2
Loading required package: parallel
> 
> time_start = Sys.time()
> 
> ############################################################################
> #  Generate data and specify params
> ############################################################################
> sigma_known = 1.0
> nr_observations = 30000
> observations <- rnorm(nr_observations, 3, sigma_known)
> 
> n_iter = 100000
> burn_in = 0.3
> sigma = 0.01
> mean_prior=0.0
> sigma_prior=1.0
> x_0 = 0
> 
> ############################################################################
> #  Split data into shards and run on 4 machines
> ############################################################################
> 
> nr_servers <- 4
> shards <- split(observations, rep(seq_len(nr_servers),each=length(observations)/nr_servers))
> 
> clust <- makePSOCKcluster(names = c("greywagtail",
+                                     "greyheron",
+                                     "greypartridge",
+                                     "greyplover"))
> 
> clusterEvalQ(cl = clust, devtools::load_all("~/Workspace/GirlsProject/ConsensusMCMC/"))
[[1]]
[[1]]$env
<environment: namespace:ConsensusMCMC>

[[1]]$data
character(0)

[[1]]$code
 [1] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/ACFPlot.R"          
 [2] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/BetaMH.R"           
 [3] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/GammaMH.R"          
 [4] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/HistPlot.R"         
 [5] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/LogisticMH.R"       
 [6] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMH.R"         
 [7] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMutliCoreMH.R"
 [8] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/QQplot.R"           
 [9] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/TracePlot.R"        
[10] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/weights_function.R" 

[[1]]$dll
[[1]]$dll$ConsensusMCMC
DLL name: ConsensusMCMC
Filename:
        /homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/src/ConsensusMCMC.so
Dynamic lookup: TRUE



[[2]]
[[2]]$env
<environment: namespace:ConsensusMCMC>

[[2]]$data
character(0)

[[2]]$code
 [1] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/ACFPlot.R"          
 [2] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/BetaMH.R"           
 [3] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/GammaMH.R"          
 [4] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/HistPlot.R"         
 [5] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/LogisticMH.R"       
 [6] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMH.R"         
 [7] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMutliCoreMH.R"
 [8] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/QQplot.R"           
 [9] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/TracePlot.R"        
[10] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/weights_function.R" 

[[2]]$dll
[[2]]$dll$ConsensusMCMC
DLL name: ConsensusMCMC
Filename:
        /homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/src/ConsensusMCMC.so
Dynamic lookup: TRUE



[[3]]
[[3]]$env
<environment: namespace:ConsensusMCMC>

[[3]]$data
character(0)

[[3]]$code
 [1] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/ACFPlot.R"          
 [2] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/BetaMH.R"           
 [3] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/GammaMH.R"          
 [4] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/HistPlot.R"         
 [5] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/LogisticMH.R"       
 [6] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMH.R"         
 [7] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMutliCoreMH.R"
 [8] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/QQplot.R"           
 [9] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/TracePlot.R"        
[10] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/weights_function.R" 

[[3]]$dll
[[3]]$dll$ConsensusMCMC
DLL name: ConsensusMCMC
Filename:
        /homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/src/ConsensusMCMC.so
Dynamic lookup: TRUE



[[4]]
[[4]]$env
<environment: namespace:ConsensusMCMC>

[[4]]$data
character(0)

[[4]]$code
 [1] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/ACFPlot.R"          
 [2] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/BetaMH.R"           
 [3] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/GammaMH.R"          
 [4] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/HistPlot.R"         
 [5] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/LogisticMH.R"       
 [6] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMH.R"         
 [7] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMutliCoreMH.R"
 [8] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/QQplot.R"           
 [9] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/TracePlot.R"        
[10] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/weights_function.R" 

[[4]]$dll
[[4]]$dll$ConsensusMCMC
DLL name: ConsensusMCMC
Filename:
        /homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/src/ConsensusMCMC.so
Dynamic lookup: TRUE



> 
> lambda <- clusterApplyLB(clust, shards, NormalMultiCoreMH, multicore=1, num_cores= 8, n=n_iter, sigma=sigma, mean_prior=mean_prior, sigma_prior=sigma_prior, sigma_known=sigma_known, s= nr_servers, x_0 = x_0)
> 
> stopCluster(clust)
> 
> df = data.frame(lapply(lambda, function(y) y))
> colnames(df) <- paste0('x', seq_len(nr_servers))
> 
> #  Combine results
> #df$mean = rowMeans(df)
> parallel_chain = weightsComputation(df, method="constant")
> 
> ############################################################################
> #  Run on a single machine
> ############################################################################
> 
> nr_servers <- 1
> shards <- split(observations, rep(seq_len(nr_servers),each=length(observations)/nr_servers))
> 
> clust <- makePSOCKcluster(names = c("greywagtail"))
> clusterEvalQ(cl = clust, devtools::load_all("~/Workspace/GirlsProject/ConsensusMCMC/"))
[[1]]
[[1]]$env
<environment: namespace:ConsensusMCMC>

[[1]]$data
character(0)

[[1]]$code
 [1] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/ACFPlot.R"          
 [2] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/BetaMH.R"           
 [3] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/GammaMH.R"          
 [4] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/HistPlot.R"         
 [5] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/LogisticMH.R"       
 [6] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMH.R"         
 [7] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/NormalMutliCoreMH.R"
 [8] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/QQplot.R"           
 [9] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/TracePlot.R"        
[10] "/homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/R/weights_function.R" 

[[1]]$dll
[[1]]$dll$ConsensusMCMC
DLL name: ConsensusMCMC
Filename:
        /homes/aglietti/Workspace/GirlsProject/ConsensusMCMC/src/ConsensusMCMC.so
Dynamic lookup: TRUE



> lambda <- clusterApplyLB(clust, shards, NormalMultiCoreMH, multicore=1, num_cores= 8, n=n_iter, sigma=sigma, mean_prior=mean_prior, sigma_prior=sigma_prior, sigma_known=sigma_known, s= nr_servers, x_0 = x_0)
> stopCluster(clust)
> 
> df = data.frame(lapply(lambda, function(y) y))
> colnames(df) <- paste0('x', seq_len(nr_servers))
> single_chain = df$x
> 
> #single_chain = NormalMultiCoreMH(multicore=1, data=observations, n = n_iter, sigma = sigma, mean_prior=mean_prior, sigma_prior=sigma_prior, sigma_known=sigma_known, s=1, x_0 = x_0) #are these args right TODO
> 
> ############################################################################
> #  Plot and compare to theory
> ############################################################################
> 
> mean_post = (mean_prior/sigma_prior^2 + sum(observations)/sigma_known^2)/(1/sigma_prior^2 + length(observations)/sigma_known^2)
> sigma_post = sqrt(1/(1/sigma_prior^2 + length(observations)/sigma_known^2))
> theoretical = rnorm(10000, mean_post, sigma_post)
> 
> HistPlot(list(single_chain, parallel_chain, theoretical), method = c("1 machine, multicore", "4 machines, multicore", "Theoretical"), burn_in = burn_in)
> TracePlot(list(single_chain, parallel_chain), method = c('single machine', '4 machines'),  burn_in=0.3)
> 
> ############################################################################
> #  Compare different number of computers - DONE ON AMAZON
> ############################################################################
> # 
> # n_iter_vec = c(1000, 10000, 100000, 1000000)
> # n_machines = c(1,4,10)
> # #time_vec = matrix(NA, nrow=n_alternatives , ncol=4)
> # 
> # for (k in n_iter_vec){
> #   for (m in n_machines){
> #     nr_servers = m
> #     print(m)
> #     nr_iter_vec = n_iter_vec  
> #   }
> #   
> #   shards <- split(observations, rep(seq_len(nr_servers),each=length(observations)/nr_servers))
> #   clust <- makePSOCKcluster(names = c("greywagtail"))
> #   clusterEvalQ(cl = clust, devtools::load_all("~/Workspace/GirlsProject/ConsensusMCMC/"))
> #   lambda <- clusterApplyLB(clust, shards, NormalMultiCoreMH, multicore=1, n=n_iter, sigma=sigma, mean_prior=mean_prior, sigma_prior=sigma_prior, sigma_known=sigma_known, s= nr_servers, x_0 = x_0)
> #   stopCluster(clust)
> #   
> #   df = data.frame(lapply(lambda, function(y) y))
> #   colnames(df) <- paste0('x', seq_len(nr_servers))
> #   single_chain = df$x
> #   
> #   
> #   names <- c("greywagtail",
> #              "greyheron",
> #              "greypartridge",
> #              "greyplover")
> #   time_start = Sys.time()
> #   
> #   }
> # 
> # 
> # for (nr_servers in rep(1:4,5)) {
> #   time_start = Sys.time()
> # 
> #     shards <- split(observations, rep(seq_len(nr_servers),each=length(observations)/nr_servers))
> #   
> #   clust <- makePSOCKcluster(names = server_sample)
> #   
> #   clusterEvalQ(cl = clust, devtools::load_all("~/Workspace/GirlsProject/ConsensusMCMC/"))
> #   
> #   lambda <- clusterApplyLB(clust, shards, NormalMultiCoreMH, multicore=1,n=n_iter, sigma=sigma, mean_prior=mean_prior, sigma_prior=sigma_prior, sigma_known=sigma_known, s= nr_servers, x_0 = x_0)
> #   
> #   stopCluster(clust)
> #   
> #   df = data.frame(lapply(lambda, function(y) y))
> #   colnames(df) <- paste0('x', seq_len(nr_servers))
> #   
> #   #  Combine results
> #   #df$mean = rowMeans(df)
> #   parallel_chain = weightsComputation(df, method="constant")
> #   print(nr_servers)
> #   print(Sys.time() - time_start)
> # }
> 
> proc.time()
   user  system elapsed 
  3.228   0.338  13.360 
