% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NormalMH.R
\name{NormalMH}
\alias{NormalMH}
\title{MH-Algorithm for a Univariate Normal target distribution.}
\usage{
NormalMH(data, n, sigma, mean_prior, sigma_prior, sigma_known, s, x_0)
}
\arguments{
\item{data}{Observations distributed as an univariate normal distribution with unknown mean and known variance.}

\item{n}{The required number of iterations for the MH-algorithm.}

\item{sigma}{The value of the satandard deviation for the Gaussian proposal distribution of the random-walk MH-algorithm.}

\item{mean_prior}{The prior mean value for the unknown parameter.}

\item{sigma_prior}{The prior standard deviation value for the unknown parameter.}

\item{sigma_known}{The value of the known parameter.}

\item{s}{The number of machines on which to run the MH-algorithm. The value ranges between 1 and 4. Must be set different to 1 if running in parallel.}

\item{x_0}{The initial value for the unknown parameter.}
}
\value{
The function returns a vector with the values of the Markov chain generated by the MH-algorithm.
}
\description{
\code{} The NormalMH function returns the Markov chain generated by a random walk Metropolis-Hasting 
algorithm having a univariate normal distribution as target distribution.
}
\examples{

# Set the parameters for the function
sigma_known = 1
nr_servers = 1 
n_iter = 1000
burn_in = 0.1*n_iter
sigma = 0.01
mean_prior = 0.0
sigma_prior = 1.0
x_0 = 0.0

# Generate data
observations = rnorm(10000, 1 , sigma_known)

# Run the function for the chosen parameters
markov_chain = NormalMH(data= observations, 
               n = n_iter, 
               sigma = sigma, 
               mean_prior = mean_prior, 
               sigma_prior = sigma_prior, 
               sigma_known = sigma_known, 
               s = nr_servers, 
               x_0 = x_0) 


}

