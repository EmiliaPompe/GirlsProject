% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BetaMH.R
\name{BetaMH}
\alias{BetaMH}
\title{MH-Algorithm for a Univariate Beta target distribution.}
\usage{
BetaMH(data, n, sigma, alpha_prior, beta_prior, s, x_0)
}
\arguments{
\item{data}{Observations distributed as an Binomial distribution.}

\item{n}{The required number of iterations for the MH-algorithm.}

\item{sigma}{The value of the standard deviation for the Gaussian proposal distribution of the random-walk MH-algorithm.}

\item{alpha_prior}{The prior value of the first non-negative parameter of the Beta prior distribution of the probability of success.}

\item{beta_prior}{The prior value of second non-negative parameter of the Beta prior distribution of the probability of success.}

\item{s}{The number of machines on which to run the MH-algorithm. The value ranges between 1 and 4. Must be set different to 1 if running in parallel.}

\item{x_0}{The initial value for the unknown parameter of the Beta target distribution.}
}
\value{
The function returns a vector with the values of the Markov chain generated by the MH-algorithm.
}
\description{
\code{} The BetaMH function returns the Markov chain generated by a random walk Metropolis-Hasting 
algorithm having a univariate beta distribution as target distribution.
}
\examples{
# Generate data
observations <- rbinom(10000, size = 1, prob = 0.5)

# Set the parameters for the function
nr_servers = 1 
n_iter = 1000
burn_in = 0.1*n_iter
sigma = 0.01
alpha_prior = 1.0
beta_prior = 1.0
x_0 = 0.1


# Run the function for the chosen parameters
markov_chain = NormalMH(observations,
               n_iter = n_iter,
               sigma = sigma, 
               alpha_prior = alpha_prior, 
               beta_prior = beta_prior, 
               s = 1, 
               x_0 = x_0)

}

